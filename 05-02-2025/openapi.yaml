openapi: 3.0.0
info:
  title: Hall Management System API
  description: API for managing halls with authentication and authorization.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging-api.example.com/v1
    description: Staging server
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Creates a new user account.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
  /auth/login:
    post:
      summary: User login
      description: Authenticates a user and returns a token.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful, returns JWT token
  /halls:
    get:
      summary: Get all halls
      description: Returns a list of halls (Requires authentication).
      operationId: getHalls
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of halls.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hall'
    post:
      summary: Create a new hall
      description: Adds a new hall to the system (Requires admin authorization).
      operationId: createHall
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hall'
      responses:
        '201':
          description: Hall created successfully
  /halls/{hallId}:
    get:
      summary: Get a hall by ID
      description: Returns details of a specific hall (Requires authentication).
      operationId: getHallById
      security:
        - bearerAuth: []
      parameters:
        - name: hallId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hall details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hall'
        '404':
          description: Hall not found
    delete:
      summary: Delete a hall
      description: Removes a hall from the system (Requires admin authorization).
      operationId: deleteHall
      security:
        - bearerAuth: []
      parameters:
        - name: hallId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Hall deleted successfully
        '404':
          description: Hall not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
        - password
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    Hall:
      type: object
      required:
        - id
        - name
        - location
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
